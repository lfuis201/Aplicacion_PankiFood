//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PankiFoodProject.AlimentoService {
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AlimentoServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AlimentoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Insertar_AlimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Listado_AlimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Eliminar_AlimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Actualizar_AlimentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerAlimentoPorIdOperationCompleted;
        
        /// <remarks/>
        public AlimentoService() {
            this.Url = "http://localhost:8081/AlimentoService.asmx";
        }
        
        public AlimentoService(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        public event Insertar_AlimentoCompletedEventHandler Insertar_AlimentoCompleted;
        
        /// <remarks/>
        public event Listado_AlimentoCompletedEventHandler Listado_AlimentoCompleted;
        
        /// <remarks/>
        public event Eliminar_AlimentoCompletedEventHandler Eliminar_AlimentoCompleted;
        
        /// <remarks/>
        public event Actualizar_AlimentoCompletedEventHandler Actualizar_AlimentoCompleted;
        
        /// <remarks/>
        public event ObtenerAlimentoPorIdCompletedEventHandler ObtenerAlimentoPorIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insertar_Alimento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Alimento(string Nombre, string Descripcion, float Precio) {
            object[] results = this.Invoke("Insertar_Alimento", new object[] {
                        Nombre,
                        Descripcion,
                        Precio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_AlimentoAsync(string Nombre, string Descripcion, float Precio) {
            this.Insertar_AlimentoAsync(Nombre, Descripcion, Precio, null);
        }
        
        /// <remarks/>
        public void Insertar_AlimentoAsync(string Nombre, string Descripcion, float Precio, object userState) {
            if ((this.Insertar_AlimentoOperationCompleted == null)) {
                this.Insertar_AlimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_AlimentoOperationCompleted);
            }
            this.InvokeAsync("Insertar_Alimento", new object[] {
                        Nombre,
                        Descripcion,
                        Precio}, this.Insertar_AlimentoOperationCompleted, userState);
        }
        
        private void OnInsertar_AlimentoOperationCompleted(object arg) {
            if ((this.Insertar_AlimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_AlimentoCompleted(this, new Insertar_AlimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Listado_Alimento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Listado_Alimento() {
            object[] results = this.Invoke("Listado_Alimento", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Listado_AlimentoAsync() {
            this.Listado_AlimentoAsync(null);
        }
        
        /// <remarks/>
        public void Listado_AlimentoAsync(object userState) {
            if ((this.Listado_AlimentoOperationCompleted == null)) {
                this.Listado_AlimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListado_AlimentoOperationCompleted);
            }
            this.InvokeAsync("Listado_Alimento", new object[0], this.Listado_AlimentoOperationCompleted, userState);
        }
        
        private void OnListado_AlimentoOperationCompleted(object arg) {
            if ((this.Listado_AlimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Listado_AlimentoCompleted(this, new Listado_AlimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Eliminar_Alimento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Eliminar_Alimento(int Id) {
            object[] results = this.Invoke("Eliminar_Alimento", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Eliminar_AlimentoAsync(int Id) {
            this.Eliminar_AlimentoAsync(Id, null);
        }
        
        /// <remarks/>
        public void Eliminar_AlimentoAsync(int Id, object userState) {
            if ((this.Eliminar_AlimentoOperationCompleted == null)) {
                this.Eliminar_AlimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEliminar_AlimentoOperationCompleted);
            }
            this.InvokeAsync("Eliminar_Alimento", new object[] {
                        Id}, this.Eliminar_AlimentoOperationCompleted, userState);
        }
        
        private void OnEliminar_AlimentoOperationCompleted(object arg) {
            if ((this.Eliminar_AlimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Eliminar_AlimentoCompleted(this, new Eliminar_AlimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Actualizar_Alimento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Actualizar_Alimento(int Id, string Nombre, string Descripcion, float Precio) {
            object[] results = this.Invoke("Actualizar_Alimento", new object[] {
                        Id,
                        Nombre,
                        Descripcion,
                        Precio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Actualizar_AlimentoAsync(int Id, string Nombre, string Descripcion, float Precio) {
            this.Actualizar_AlimentoAsync(Id, Nombre, Descripcion, Precio, null);
        }
        
        /// <remarks/>
        public void Actualizar_AlimentoAsync(int Id, string Nombre, string Descripcion, float Precio, object userState) {
            if ((this.Actualizar_AlimentoOperationCompleted == null)) {
                this.Actualizar_AlimentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizar_AlimentoOperationCompleted);
            }
            this.InvokeAsync("Actualizar_Alimento", new object[] {
                        Id,
                        Nombre,
                        Descripcion,
                        Precio}, this.Actualizar_AlimentoOperationCompleted, userState);
        }
        
        private void OnActualizar_AlimentoOperationCompleted(object arg) {
            if ((this.Actualizar_AlimentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Actualizar_AlimentoCompleted(this, new Actualizar_AlimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerAlimentoPorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtenerAlimentoPorId(int Id) {
            object[] results = this.Invoke("ObtenerAlimentoPorId", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerAlimentoPorIdAsync(int Id) {
            this.ObtenerAlimentoPorIdAsync(Id, null);
        }
        
        /// <remarks/>
        public void ObtenerAlimentoPorIdAsync(int Id, object userState) {
            if ((this.ObtenerAlimentoPorIdOperationCompleted == null)) {
                this.ObtenerAlimentoPorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerAlimentoPorIdOperationCompleted);
            }
            this.InvokeAsync("ObtenerAlimentoPorId", new object[] {
                        Id}, this.ObtenerAlimentoPorIdOperationCompleted, userState);
        }
        
        private void OnObtenerAlimentoPorIdOperationCompleted(object arg) {
            if ((this.ObtenerAlimentoPorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerAlimentoPorIdCompleted(this, new ObtenerAlimentoPorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void Insertar_AlimentoCompletedEventHandler(object sender, Insertar_AlimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_AlimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_AlimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void Listado_AlimentoCompletedEventHandler(object sender, Listado_AlimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Listado_AlimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Listado_AlimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void Eliminar_AlimentoCompletedEventHandler(object sender, Eliminar_AlimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eliminar_AlimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Eliminar_AlimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void Actualizar_AlimentoCompletedEventHandler(object sender, Actualizar_AlimentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Actualizar_AlimentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Actualizar_AlimentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void ObtenerAlimentoPorIdCompletedEventHandler(object sender, ObtenerAlimentoPorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerAlimentoPorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerAlimentoPorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
